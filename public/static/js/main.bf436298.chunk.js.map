{"version":3,"sources":["components/auth/auth-service.js","components/navbar/Navbar.js","components/projects/AddProject.js","components/projects/ProjectList.js","components/projects/EditProject.js","components/tasks/AddTask.js","components/projects/ProjectDetails.js","components/tasks/TaskDetails.js","components/auth/Signup.js","components/auth/Login.js","components/auth/protected-route.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","this","service","axios","create","baseURL","process","withCredentials","username","password","post","then","response","data","get","Navbar","props","state","loggedInUser","prevProps","userInSession","setState","logout","getUser","catch","error","console","log","className","activeStyle","color","to","style","textDecoration","onClick","logoutUser","Component","AddProject","title","description","handleFormSubmit","bind","handleChange","event","preventDefault","getData","target","name","value","onSubmit","type","onChange","ProjectList","listOfProjects","getAllProjects","responseFromApi","projectID","delete","err","width","float","map","project","id","_id","key","tasks","task","index","owner","deleteProject","EditProject","theProject","put","getTheProject","history","push","AddTask","isShowing","toggleForm","showAddTaskForm","e","ProjectDetails","ownershipCheck","renderEditForm","getSingleProject","params","match","length","renderAddTaskForm","TaskDetails","getTheTask","taskId","theTask","Signup","message","signup","user","Login","login","location","from","pathname","ProtectedRoute","component","rest","render","App","getTheUser","loggedin","userObj","fetchUser","exact","path","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf436298.chunk.js","sourcesContent":["// auth/auth-service.js\n\nimport axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API,\n      withCredentials: true\n    });\n  }\n\n  signup(username, password) {\n    return this.service.post('/signup', {\n        username,\n        password\n      })\n      .then(response => response.data)\n  }\n\n  login(username, password) {\n    return this.service.post('/login', {\n        username,\n        password\n      })\n      .then(response => response.data)\n  }\n\n  logout() {\n    return this.service.get('/logout')\n      .then(response => response.data)\n  }\n\n  loggedin() {\n    return this.service.get('/loggedin')\n      .then(response => response.data)\n  }\n}\n\nexport default AuthService;","// components/navbar/Navbar.js\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport AuthService from \"../auth/auth-service\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null\n    };\n    this.service = new AuthService();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.userInSession !== prevProps.userInSession) {\n      this.setState({ loggedInUser: this.props.userInSession });\n    }\n  }\n\n  logoutUser() {\n    this.service\n      .logout()\n      .then(() => {\n        this.setState({ loggedInUser: null });\n        this.props.getUser(null);\n      })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    return (\n      <nav className=\"nav-style\">\n        {this.state.loggedInUser ? (\n          <ul>\n            <li>Welcome, {this.state.loggedInUser.username}</li>\n            <li>\n              <NavLink\n                activeStyle={{ color: \"red\" }}\n                to=\"/projects\"\n                style={{ textDecoration: \"none\" }}\n              >\n                Projects\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/\">\n                <button onClick={() => this.logoutUser()}>Logout</button>\n              </NavLink>\n            </li>\n          </ul>\n        ) : (\n          <ul>\n            <li>\n              <NavLink to=\"/\" style={{ textDecoration: \"none\" }}>\n                Login\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/signup\" style={{ textDecoration: \"none\" }}>\n                Signup\n              </NavLink>\n            </li>\n          </ul>\n        )}\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","// components/projects/AddProject.js\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass AddProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: \"\", description: \"\" };\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const title = this.state.title;\n    const description = this.state.description;\n    axios\n      .post(\n        process.env.REACT_APP_API + \"/projects\",\n        { title, description },\n        { withCredentials: true }\n      )\n      .then(() => {\n        this.props.getData();\n        this.setState({ title: \"\", description: \"\" });\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Title:</label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.handleChange}\n          />\n          <br />\n          <br />\n          <label>Description:</label>\n          <br />\n          <textarea\n            name=\"description\"\n            value={this.state.description}\n            onChange={this.handleChange}\n          />\n          <br />\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddProject;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport AddProject from \"./AddProject\"; // <== !!!\n\nclass ProjectList extends Component {\n  constructor() {\n    super();\n    this.state = { listOfProjects: [] };\n    this.getAllProjects = this.getAllProjects.bind(this);\n  }\n\n  getAllProjects() {\n    axios.get(`${process.env.REACT_APP_API}/projects`).then(responseFromApi => {\n      this.setState({\n        listOfProjects: responseFromApi.data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getAllProjects();\n  }\n\n  deleteProject(projectID) {\n    axios\n      .delete(`${process.env.REACT_APP_API}/projects/${projectID}`, {\n        withCredentials: true\n      })\n      .then(() => {\n        this.getAllProjects();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ width: \"60%\", float: \"left\" }}>\n          {this.state.listOfProjects.map(project => {\n            return (\n              <div id={project._id} key={project._id}>\n                <Link to={`/projects/${project._id}`}>\n                  <h3>{project.title}</h3>\n                </Link>\n                <ul>\n                  {project.tasks.map((task, index) => {\n                    return <li key={index}>{task.title}</li>;\n                  })}\n                </ul>\n                {/* <p style={{maxWidth: '400px'}} >{project.description} </p> */}\n                {this.props.loggedInUser &&\n                  this.props.loggedInUser._id === project.owner && (\n                    <button onClick={() => this.deleteProject(project._id)}>\n                      Delete project\n                    </button>\n                  )}\n              </div>\n            );\n          })}\n        </div>\n        <div style={{ width: \"40%\", float: \"right\" }}>\n          <AddProject getData={this.getAllProjects} /> {/* <== !!! */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectList;\n","// components/projects/EditProject.js\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass EditProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: this.props.theProject.title,\n      description: this.props.theProject.description\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleFormSubmit(event) {\n    const title = this.state.title;\n    const description = this.state.description;\n\n    event.preventDefault();\n\n    axios\n      .put(\n        `${process.env.REACT_APP_API}/projects/${this.props.theProject._id}`,\n        {\n          title,\n          description\n        },\n        { withCredentials: true }\n      )\n      .then(() => {\n        this.props.getTheProject();\n        // after submitting the form, redirect to '/projects'\n        this.props.history.push(\"/projects\");\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleChange(event) {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <hr />\n        <h3>Edit form</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Title:</label>\n          <br />\n\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.handleChange}\n          />\n          <br />\n          <br />\n\n          <label>Description:</label>\n          <br />\n\n          <textarea\n            name=\"description\"\n            value={this.state.description}\n            onChange={this.handleChange}\n          />\n          <br />\n          <br />\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditProject;\n","// components/tasks/AddTask.js\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass AddTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: \"\", description: \"\", isShowing: false };\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.showAddTaskForm = this.showAddTaskForm.bind(this);\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const title = this.state.title;\n    const description = this.state.description;\n    const projectID = this.props.theProject._id; // <== we need to know to which project the created task belong, so we need to get its 'id'\n    // it has to be the 'id' because we are referencing project\n    // by its id in the task model on the server side ( project: {type: Schema.Types.ObjectId, ref: 'Project'})\n\n    // { title, description, projectID } => this is 'req.body' that will be received on the server side in this route,\n    // so the names have to match\n    axios\n      .post(process.env.REACT_APP_API + \"/tasks\", {\n        title,\n        description,\n        projectID\n      })\n      .then(() => {\n        // after submitting the form, retrieve project one more time so the new task is displayed as well\n        //              |\n        this.props.getTheProject();\n        this.setState({ title: \"\", description: \"\" });\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  toggleForm() {\n    this.setState({ isShowing: !this.state.isShowing });\n    // if (!this.state.isShowing) {\n    //   this.setState({ isShowing: true });\n    // } else {\n    //   this.setState({ isShowing: false });\n    // }\n  }\n\n  showAddTaskForm() {\n    if (this.state.isShowing) {\n      return (\n        <div>\n          <h3>Add Task</h3>\n          <form onSubmit={this.handleFormSubmit}>\n            <label>Title:</label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={this.state.title}\n              onChange={e => this.handleChange(e)}\n            />\n            <label>Description:</label>\n            <textarea\n              name=\"description\"\n              value={this.state.description}\n              onChange={e => this.handleChange(e)}\n            />\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <button onClick={() => this.toggleForm()}> Add task </button>\n        {this.showAddTaskForm()}\n      </div>\n    );\n  }\n}\n\nexport default AddTask;\n","// components/projects/ProjectDetails.js\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport EditProject from \"./EditProject\";\nimport AddTask from \"../tasks/AddTask\";\n\nclass ProjectDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.getSingleProject = this.getSingleProject.bind(this);\n    this.deleteProject = this.deleteProject.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSingleProject();\n  }\n\n  getSingleProject() {\n    const { params } = this.props.match;\n    axios\n      .get(`${process.env.REACT_APP_API}/projects/${params.id}`, {\n        withCredentials: true\n      })\n      .then(responseFromApi => {\n        const theProject = responseFromApi.data;\n        console.log(theProject);\n        this.setState(theProject);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  ownershipCheck = project => {\n    if (\n      this.props.loggedInUser &&\n      project.owner === this.props.loggedInUser._id\n    ) {\n      return (\n        <div>\n          <div>{this.renderEditForm()} </div>\n          <button onClick={() => this.deleteProject(this.state._id)}>\n            Delete project\n          </button>\n        </div>\n      );\n    }\n  };\n\n  renderEditForm() {\n    if (!this.state.title) {\n      this.getSingleProject();\n    } else {\n      return (\n        <EditProject\n          theProject={this.state}\n          getTheProject={this.getSingleProject}\n          {...this.props}\n        />\n      );\n    }\n  }\n\n  deleteProject() {\n    const { params } = this.props.match;\n    axios\n      .delete(`${process.env.REACT_APP_API}/projects/${params.id}`, {\n        withCredentials: true\n      })\n      .then(() => {\n        this.props.history.push(\"/projects\"); // !!!\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  renderAddTaskForm() {\n    if (!this.state.title) {\n      this.getSingleProject();\n    } else {\n      // pass the project and method getSingleProject() as a props down to AddTask component\n      return (\n        <AddTask\n          theProject={this.state}\n          getTheProject={this.getSingleProject}\n        />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1> {this.state.title} </h1> <p> {this.state.description} </p>{\" \"}\n        {/* show the task heading only if there are tasks */}{\" \"}\n        {this.state.tasks && this.state.tasks.length > 0 && <h3> Tasks </h3>}{\" \"}\n        {/* map through the array of tasks and... */}{\" \"}\n        {this.state.tasks &&\n          this.state.tasks.map((task, index) => {\n            return (\n              <div key={index}>\n                {\" \"}\n                {/* ... make each task's title a link that goes to the task details page */}{\" \"}\n                <Link to={`/projects/${this.state._id}/tasks/${task._id}`}>\n                  {\" \"}\n                  {task.title}{\" \"}\n                </Link>{\" \"}\n              </div>\n            );\n          })}{\" \"}\n        <div>{this.ownershipCheck(this.state)}</div>\n        <br />\n        <div> {this.renderAddTaskForm()} </div> <br />\n        <br />\n        <br />\n        <Link to={\"/projects\"}> Back to projects </Link>{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default ProjectDetails;\n","// components/tasks/TaskDetails.js\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass TaskDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.getTheTask = this.getTheTask.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTheTask();\n  }\n\n  getTheTask() {\n    const { params } = this.props.match;\n    axios\n      .get(\n        `${process.env.REACT_APP_API}/projects/${params.id}/tasks/${params.taskId}`\n      )\n      .then(responseFromApi => {\n        const theTask = responseFromApi.data;\n        this.setState(theTask);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.title}</h1>\n        <p>{this.state.description}</p>\n      </div>\n    );\n  }\n}\n\nexport default TaskDetails;\n","// auth/Signup.js\n\nimport React, { Component } from \"react\";\nimport AuthService from \"./auth-service\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\", message: \"\" };\n    this.service = new AuthService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .signup(username, password)\n      .then(user => {\n        this.setState({\n          username: \"\",\n          password: \"\"\n        });\n        this.props.getUser(user);\n        this.props.history.push(\"/projects\");\n      })\n      .catch(error => {\n        this.setState({\n          message: error.response.data.message\n        });\n      });\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <input type=\"submit\" value=\"Signup\" />\n        </form>\n        {this.state.message && <p>{this.state.message}</p>}\n        <p>\n          Already have account?\n          <Link to={\"/\"}> Login</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","// auth/Login.js\n\nimport React, { Component } from \"react\";\nimport AuthService from \"./auth-service\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    this.service\n      .login(username, password)\n      .then(response => {\n        const { location } = this.props;\n        this.setState({ username: \"\", password: \"\" });\n        this.props.getUser(response);\n        if (location.state) {\n          this.props.history.push(location.state.from.pathname);\n        } else {\n          this.props.history.push(\"/projects\");\n        }\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n        <p>\n          Don't have account?\n          <Link to={\"/signup\"}> Signup</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","// auth/protected-route.js\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, user, ...rest }) => {\n  console.log({ component: Component, user, ...rest });\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (user) {\n          return <Component {...props} loggedInUser={user} />;\n        } else {\n          return (\n            <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n          );\n        }\n      }}\n    />\n  );\n};\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport ProjectList from \"./components/projects/ProjectList\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport TaskDetails from \"./components/tasks/TaskDetails\";\nimport Signup from \"./components/auth/Signup\";\nimport AuthService from \"./components/auth/auth-service\";\nimport Login from \"./components/auth/Login\";\nimport ProtectedRoute from \"./components/auth/protected-route\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n    this.getTheUser = this.getTheUser.bind(this);\n  }\n\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n      this.service\n        .loggedin()\n        .then(response => {\n          this.setState({\n            loggedInUser: response\n          });\n        })\n        .catch(err => {\n          this.setState({\n            loggedInUser: false\n          });\n        });\n    }\n  }\n\n  getTheUser(userObj) {\n    this.setState({\n      loggedInUser: userObj\n    });\n  }\n\n  render() {\n    // auth engine\n    this.fetchUser();\n    return (\n      <div className=\"App\">\n        <Navbar\n          userInSession={this.state.loggedInUser}\n          getUser={this.getTheUser}\n        />\n\n        {this.state.loggedInUser ? (\n          <Switch>\n            <ProtectedRoute\n              exact\n              path=\"/projects\"\n              user={this.state.loggedInUser}\n              component={ProjectList}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/projects/:id\"\n              user={this.state.loggedInUser}\n              component={ProjectDetails}\n            />\n            )} />\n            <ProtectedRoute\n              exact\n              path=\"/projects/:id/tasks/:taskId\"\n              user={this.state.loggedInUser}\n              component={TaskDetails}\n            />\n          </Switch>\n        ) : (\n          <Switch>\n            <Route\n              exact\n              path=\"/signup\"\n              user={this.state.loggedInUser}\n              render={props => <Signup getUser={this.getTheUser} {...props} />}\n            />\n            <Route\n              exact\n              path=\"/\"\n              user={this.state.loggedInUser}\n              render={props => <Login getUser={this.getTheUser} {...props} />}\n            />\n            <ProtectedRoute exact path=\"/projects\" component={ProjectList} />\n            <ProtectedRoute\n              exact\n              path=\"/projects/:id\"\n              user={this.state.loggedInUser}\n              component={ProjectDetails}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/projects/:id/tasks/:taskId\"\n              user={this.state.loggedInUser}\n              component={TaskDetails}\n            />\n          </Switch>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}